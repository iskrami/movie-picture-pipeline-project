# Workflow name
name: Backend Continuous Integration

# Triggers for the workflow
on:  
  # Run workflow on demand
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'
  
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Cache pip dependencies
      - name: Cache pipenv dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip  # Cache pip downloads
            ~/.local/share/virtualenvs  # Cache Pipenv's virtual environment
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/backend/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      # Install pipenv and dependencies
      - name: Install Pipenv and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          cd backend
          pipenv install --dev  # Install all dependencies including dev dependencies

      - name: Run tests with pytest
        run: |
          cd backend
          pipenv run pytest  # Use the pipenv environment to run pytest

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Cache pip dependencies
      - name: Cache pipenv dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip  # Cache pip downloads
            ~/.local/share/virtualenvs  # Cache Pipenv's virtual environment
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/backend/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      # Install pipenv and dependencies
      - name: Install Pipenv and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          cd backend
          pipenv install --dev  # Install all dependencies including dev dependencies

      - name: Run lint with Pipenv
        run: |
          cd backend
          pipenv run lint

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Cache pip dependencies
      - name: Cache pipenv dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip  # Cache pip downloads
            ~/.local/share/virtualenvs  # Cache Pipenv's virtual environment
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/backend/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      # Install pipenv and dependencies
      - name: Install Pipenv and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          cd backend
          pipenv install --dev  # Install all dependencies including dev dependencies

      - name: Build Docker Image
        run: cd backend && docker build -t mp-backend .
