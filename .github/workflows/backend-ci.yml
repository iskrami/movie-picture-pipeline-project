# Workflow name
name: Backend Continuous Integration

# Triggers for the workflow
on:
  # Run workflow on demand
  workflow_dispatch:
  
  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main
      
    paths:
      # Specify paths that should trigger the workflow
      - 'backend/**'
  
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install pipenv and dependencies
      - name: Install Pipenv and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          cd backend
          pipenv install --dev  # Install all dependencies including dev dependencies

      # Run tests using pytest with Pipenv
      - name: Run tests with pytest
        run: |
          cd backend
          pipenv run pytest  # Use the pipenv environment to run pytest
  lint:
    runs-on: ubuntu-latest
    
    steps:
      # Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3
        
      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install pipenv and dependencies
      - name: Install Pipenv and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          cd backend
          pipenv install --dev  # Install all dependencies including dev dependencies
    
      # Run lint using pipenv
      - name: Run lint with Pipenv
        run: |
          cd backend
          pipenv run lint
  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      # Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3
        
      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install pipenv and dependencies
      - name: Install Pipenv and Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          cd backend
          pipenv install --dev  # Install all dependencies including dev dependencies
    
      # Build and Run docker image
      - name: Build Docker Image
        run: cd backend && docker build -t mp-backend .
      # - run: cd backend && docker run -p 5000:5000 --name mp-backend -d mp-backend
      
      # Save the Docker image as a tarball
      - name: Save Docker image as artifact
        run: |
          docker save mp-backend -o mp-backend.tar
        # Upload the tarball as an artifact
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: mp-backend-image
          path: backend/artifacts/mp-backend.tar
          
      - name: Print current directory
        run: cd backend/artifacts && pwd

      - name: List files in the current directory
        run: ls -la